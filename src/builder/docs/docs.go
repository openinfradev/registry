// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-09-20 16:00:50.633130022 +0900 KST m=+0.065664265

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/docker/build/file": {
            "post": {
                "description": "docker build by dockerfile api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "docker build by dockerfile",
                "parameters": [
                    {
                        "description": "Json Parameters (contents is base64 encoded)",
                        "name": "contents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.DockerBuildByFileParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BasicResult"
                        }
                    }
                }
            }
        },
        "/docker/build/git": {
            "post": {
                "description": "docker build by git api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "docker build by git",
                "parameters": [
                    {
                        "description": "Json Parameters (userPW is base64 encoded)",
                        "name": "contents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.DockerBuildByGitParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BasicResult"
                        }
                    }
                }
            }
        },
        "/docker/push": {
            "put": {
                "description": "docker image push",
                "produces": [
                    "application/json"
                ],
                "summary": "docker image push",
                "parameters": [
                    {
                        "description": "Json Parameters",
                        "name": "contents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.DockerPushParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BasicResult"
                        }
                    }
                }
            }
        },
        "/docker/tag": {
            "patch": {
                "description": "docker image tag",
                "produces": [
                    "application/json"
                ],
                "summary": "docker image tag",
                "parameters": [
                    {
                        "description": "Json Parameters",
                        "name": "contents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.DockerTagParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BasicResult"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "builder의 health를 체크할 목적의 api",
                "produces": [
                    "application/json"
                ],
                "summary": "health check api",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BasicResult"
                        }
                    }
                }
            }
        },
        "/registry/catalog": {
            "get": {
                "description": "docker registry catalog api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "docker registry catalog api",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CatalogResult"
                        }
                    }
                }
            }
        },
        "/registry/manifest-v1/{name}": {
            "get": {
                "description": "docker registry manifest v1 api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "docker registry manifest v1 api",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "Repository Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag Name",
                        "name": "tag",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RegistryManifestV1"
                        }
                    }
                }
            }
        },
        "/registry/manifest-v2/{name}": {
            "get": {
                "description": "docker registry manifest v2 api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "docker registry manifest v2 api",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "Repository Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag Name",
                        "name": "tag",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RegistryManifestV2"
                        }
                    }
                }
            }
        },
        "/registry/repositories/{name}": {
            "get": {
                "description": "docker registry repositories api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "docker registry repositories api",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "Repository Name",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RepositoryResult"
                        }
                    }
                }
            },
            "delete": {
                "description": "docker registry repository delete api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "docker registry repository delete api",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "Repository Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag Name",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BasicResult"
                        }
                    }
                }
            }
        },
        "/test": {
            "get": {
                "description": "test",
                "produces": [
                    "application/json"
                ],
                "summary": "test api",
                "responses": {
                    "200": {}
                }
            }
        }
    },
    "definitions": {
        "model.BasicResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.CatalogResult": {
            "type": "object",
            "properties": {
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.DockerBuildByFileParam": {
            "type": "object",
            "required": [
                "build",
                "contents",
                "name",
                "push",
                "useCache"
            ],
            "properties": {
                "build": {
                    "type": "string"
                },
                "contents": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "push": {
                    "type": "boolean"
                },
                "useCache": {
                    "type": "boolean"
                }
            }
        },
        "model.DockerBuildByGitParam": {
            "type": "object",
            "required": [
                "build",
                "gitRepo",
                "name",
                "push",
                "useCache",
                "userId",
                "userPw"
            ],
            "properties": {
                "build": {
                    "type": "string"
                },
                "gitRepo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "push": {
                    "type": "boolean"
                },
                "useCache": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string"
                },
                "userPw": {
                    "type": "string"
                }
            }
        },
        "model.DockerPushParam": {
            "type": "object",
            "required": [
                "build",
                "name",
                "tag"
            ],
            "properties": {
                "build": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "model.DockerTagParam": {
            "type": "object",
            "required": [
                "build",
                "name",
                "newTag",
                "oldTag"
            ],
            "properties": {
                "build": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "newTag": {
                    "type": "string"
                },
                "oldTag": {
                    "type": "string"
                }
            }
        },
        "model.RegistryManifestV1": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "fsLayers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RegistryManifestV1Layer"
                    }
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RegistryManifestV1History"
                    }
                },
                "name": {
                    "type": "string"
                },
                "schemaVersion": {
                    "type": "integer"
                },
                "signatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RegistryManifestV1Signature"
                    }
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "model.RegistryManifestV1History": {
            "type": "object",
            "properties": {
                "v1Compatibility": {
                    "type": "string"
                }
            }
        },
        "model.RegistryManifestV1Layer": {
            "type": "object",
            "properties": {
                "blobSum": {
                    "type": "string"
                }
            }
        },
        "model.RegistryManifestV1Signature": {
            "type": "object",
            "properties": {
                "protected": {
                    "type": "string"
                },
                "signature": {
                    "description": "Header    string ` + "`" + `json:\"header\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "model.RegistryManifestV2": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "$ref": "#/definitions/model.RegistryManifestV2Item"
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RegistryManifestV2Item"
                    }
                },
                "mediaType": {
                    "type": "string"
                },
                "schemaVersion": {
                    "type": "integer"
                }
            }
        },
        "model.RegistryManifestV2Item": {
            "type": "object",
            "properties": {
                "digest": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "model.RepositoriesResult": {
            "type": "object",
            "properties": {
                "repositories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RepositoryResult"
                    }
                }
            }
        },
        "model.RepositoryResult": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TagResult"
                    }
                }
            }
        },
        "model.TagResult": {
            "type": "object",
            "properties": {
                "digest": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
